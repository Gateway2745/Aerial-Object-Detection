MODEL:
  WEIGHTS: "https://hangzh.s3-us-west-1.amazonaws.com/encoding/models/resnest50_detectron-255b5649.pth"
  META_ARCHITECTURE: "RetinaNet"
  BACKBONE:
    NAME: "build_retinanet_resnet_fpn_backbone"
  RESNETS:
    OUT_FEATURES: ["res3", "res4", "res5"]
    DEPTH: 50
    STRIDE_IN_1X1: false
    RADIX: 2
    NORM: "SyncBN"
  ANCHOR_GENERATOR:
    SIZES: !!python/object/apply:eval ["[[x * 0.4, x * 0.5, x * 0.629 ] for x in [32, 64, 128, 256, 512 ]]"]
    ASPECT_RATIOS: [[0.405, 0.64, 1.0, 1.562, 2.469]]
  FPN:
    IN_FEATURES: ["res3", "res4", "res5"]
    NORM: "SyncBN"
  RETINANET:
    IOU_THRESHOLDS: [0.4, 0.5]
    IOU_LABELS: [0, -1, 1]
    NUM_CLASSES: 10
    SCORE_THRESH_TEST: 0.5
  PIXEL_MEAN: [123.68, 116.779, 103.939]
  PIXEL_STD: [58.393, 57.12, 57.375]
DATASETS:
  TRAIN: ("visdrone_train",)
  TEST: ("visdrone_val",)
SOLVER:
  IMS_PER_BATCH: 2
  BASE_LR: 0.01  # Note that RetinaNet uses a different default learning rate
  STEPS: (60000, 80000)
  MAX_ITER: 161775
  CHECKPOINT_PERIOD: 3236   #save weights after these many iterations
INPUT:
  FORMAT: "RGB"
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
VERSION: 2
TEST:
  PRECISE_BN:
    ENABLED: True
  EVAL_PERIOD: 3236   # calculate accuracy after these many iterations
DATALOADER:
   NUM_WORKERS: 2
OUTPUT_DIR: "output"
